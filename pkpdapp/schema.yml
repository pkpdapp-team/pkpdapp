openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/dataset/:
    get:
      operationId: listDatasets
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
          description: ''
      tags:
      - api
    post:
      operationId: createDataset
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
      tags:
      - api
  /api/dataset/{id}/:
    get:
      operationId: retrieveDataset
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dataset.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
      tags:
      - api
    put:
      operationId: updateDataset
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dataset.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateDataset
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dataset.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyDataset
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dataset.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/user/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/user/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/subject/:
    get:
      operationId: listSubjects
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subject'
          description: ''
      tags:
      - api
    post:
      operationId: createSubject
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subject'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
      tags:
      - api
  /api/subject/{id}/:
    get:
      operationId: retrieveSubject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this subject.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
      tags:
      - api
    put:
      operationId: updateSubject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this subject.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subject'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSubject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this subject.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subject'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySubject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this subject.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/project/:
    get:
      operationId: listProjects
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    post:
      operationId: createProject
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
  /api/project/{id}/:
    get:
      operationId: retrieveProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    put:
      operationId: updateProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/project_access/:
    get:
      operationId: listProjectAccess
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectAccess'
          description: ''
      tags:
      - api
    post:
      operationId: createProjectAccess
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAccess'
          description: ''
      tags:
      - api
  /api/project_access/{id}/:
    get:
      operationId: retrieveProjectAccess
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project access.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAccess'
          description: ''
      tags:
      - api
    put:
      operationId: updateProjectAccess
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project access.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAccess'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProjectAccess
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project access.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAccess'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProjectAccess
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project access.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/dose/:
    get:
      operationId: listDoses
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dose'
          description: ''
      tags:
      - api
    post:
      operationId: createDose
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dose'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dose'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dose'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dose'
          description: ''
      tags:
      - api
  /api/dose/{id}/:
    get:
      operationId: retrieveDose
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dose.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dose'
          description: ''
      tags:
      - api
    put:
      operationId: updateDose
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dose.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dose'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dose'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dose'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dose'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateDose
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dose.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dose'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dose'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dose'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dose'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyDose
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dose.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/unit/:
    get:
      operationId: listUnits
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unit'
          description: ''
      tags:
      - api
    post:
      operationId: createUnit
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Unit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Unit'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: ''
      tags:
      - api
  /api/unit/{id}/:
    get:
      operationId: retrieveUnit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this unit.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: ''
      tags:
      - api
    put:
      operationId: updateUnit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this unit.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Unit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Unit'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUnit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this unit.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Unit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Unit'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUnit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this unit.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/variable/:
    get:
      operationId: listVariables
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Variable'
          description: ''
      tags:
      - api
    post:
      operationId: createVariable
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Variable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Variable'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: ''
      tags:
      - api
  /api/variable/{id}/:
    get:
      operationId: retrieveVariable
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this variable.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: ''
      tags:
      - api
    put:
      operationId: updateVariable
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this variable.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Variable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Variable'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateVariable
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this variable.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Variable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Variable'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyVariable
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this variable.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/protocol/:
    get:
      operationId: listProtocols
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Protocol'
          description: ''
      tags:
      - api
    post:
      operationId: createProtocol
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Protocol'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Protocol'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Protocol'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol'
          description: ''
      tags:
      - api
  /api/protocol/{id}/:
    get:
      operationId: retrieveProtocol
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this protocol.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol'
          description: ''
      tags:
      - api
    put:
      operationId: updateProtocol
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this protocol.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Protocol'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Protocol'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Protocol'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProtocol
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this protocol.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Protocol'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Protocol'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Protocol'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProtocol
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this protocol.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/biomarker_type/:
    get:
      operationId: listBiomarkerTypes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BiomarkerType'
          description: ''
      tags:
      - api
    post:
      operationId: createBiomarkerType
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BiomarkerType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BiomarkerType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BiomarkerType'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiomarkerType'
          description: ''
      tags:
      - api
  /api/biomarker_type/{id}/:
    get:
      operationId: retrieveBiomarkerType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this biomarker type.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiomarkerType'
          description: ''
      tags:
      - api
    put:
      operationId: updateBiomarkerType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this biomarker type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BiomarkerType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BiomarkerType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BiomarkerType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiomarkerType'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBiomarkerType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this biomarker type.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BiomarkerType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BiomarkerType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BiomarkerType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiomarkerType'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBiomarkerType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this biomarker type.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/pharmacokinetic/:
    get:
      operationId: listPharmacokineticModels
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pharmacokinetic'
          description: ''
      tags:
      - api
    post:
      operationId: createPharmacokineticModel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pharmacokinetic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pharmacokinetic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pharmacokinetic'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pharmacokinetic'
          description: ''
      tags:
      - api
  /api/pharmacokinetic/{id}/:
    get:
      operationId: retrievePharmacokineticModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pharmacokinetic model.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pharmacokinetic'
          description: ''
      tags:
      - api
    put:
      operationId: updatePharmacokineticModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pharmacokinetic model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pharmacokinetic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pharmacokinetic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pharmacokinetic'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pharmacokinetic'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePharmacokineticModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pharmacokinetic model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pharmacokinetic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pharmacokinetic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pharmacokinetic'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pharmacokinetic'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPharmacokineticModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pharmacokinetic model.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/pharmacodynamic/:
    get:
      operationId: listPharmacodynamicModels
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pharmacodynamic'
          description: ''
      tags:
      - api
    post:
      operationId: createPharmacodynamicModel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pharmacodynamic'
          description: ''
      tags:
      - api
  /api/pharmacodynamic/{id}/:
    get:
      operationId: retrievePharmacodynamicModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pharmacodynamic model.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pharmacodynamic'
          description: ''
      tags:
      - api
    put:
      operationId: updatePharmacodynamicModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pharmacodynamic model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pharmacodynamic'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePharmacodynamicModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pharmacodynamic model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pharmacodynamic'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPharmacodynamicModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pharmacodynamic model.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/dosed_pharmacokinetic/:
    get:
      operationId: listDosedPharmacokineticModels
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DosedPharmacokinetic'
          description: ''
      tags:
      - api
    post:
      operationId: createDosedPharmacokineticModel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DosedPharmacokinetic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DosedPharmacokinetic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DosedPharmacokinetic'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DosedPharmacokinetic'
          description: ''
      tags:
      - api
  /api/dosed_pharmacokinetic/{id}/:
    get:
      operationId: retrieveDosedPharmacokineticModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dosed pharmacokinetic
          model.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DosedPharmacokinetic'
          description: ''
      tags:
      - api
    put:
      operationId: updateDosedPharmacokineticModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dosed pharmacokinetic
          model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DosedPharmacokinetic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DosedPharmacokinetic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DosedPharmacokinetic'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DosedPharmacokinetic'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateDosedPharmacokineticModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dosed pharmacokinetic
          model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DosedPharmacokinetic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DosedPharmacokinetic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DosedPharmacokinetic'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DosedPharmacokinetic'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyDosedPharmacokineticModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dosed pharmacokinetic
          model.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/inference/:
    get:
      operationId: listInferences
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inference'
          description: ''
      tags:
      - api
    post:
      operationId: createInference
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inference'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inference'
          description: ''
      tags:
      - api
  /api/inference/{id}/:
    get:
      operationId: retrieveInference
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this inference.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inference'
          description: ''
      tags:
      - api
    put:
      operationId: updateInference
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this inference.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inference'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inference'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateInference
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this inference.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inference'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inference'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyInference
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this inference.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/algorithm/:
    get:
      operationId: listAlgorithms
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Algorithm'
          description: ''
      tags:
      - api
    post:
      operationId: createAlgorithm
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Algorithm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Algorithm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Algorithm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
          description: ''
      tags:
      - api
  /api/algorithm/{id}/:
    get:
      operationId: retrieveAlgorithm
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this algorithm.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
          description: ''
      tags:
      - api
    put:
      operationId: updateAlgorithm
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this algorithm.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Algorithm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Algorithm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Algorithm'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateAlgorithm
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this algorithm.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Algorithm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Algorithm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Algorithm'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyAlgorithm
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this algorithm.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/inference_chain/:
    get:
      operationId: listInferenceChains
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InferenceChain'
          description: ''
      tags:
      - api
    post:
      operationId: createInferenceChain
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InferenceChain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InferenceChain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InferenceChain'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InferenceChain'
          description: ''
      tags:
      - api
  /api/inference_chain/{id}/:
    get:
      operationId: retrieveInferenceChain
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this inference chain.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InferenceChain'
          description: ''
      tags:
      - api
    put:
      operationId: updateInferenceChain
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this inference chain.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InferenceChain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InferenceChain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InferenceChain'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InferenceChain'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateInferenceChain
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this inference chain.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InferenceChain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InferenceChain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InferenceChain'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InferenceChain'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyInferenceChain
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this inference chain.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/session/:
    get:
      operationId: listSessions
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/whoami/:
    get:
      operationId: listWhoAmIs
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/nca/:
    post:
      operationId: createNca
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/auce/:
    post:
      operationId: createAuce
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/dosed_pharmacokinetic/{id}/simulate:
    post:
      operationId: createSimulatePk
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/inference/wizard:
    post:
      operationId: createInferenceWizard
      description: "expecting data in the form:\n{\n\n    # Inference parameters\n\
        \    'id': 1\n    'name': \"my inference run\",\n    'project': 1,\n    'algorithm':\
        \ 2,\n    'initialization_strategy': 'R',\n    'initialization_inference':\
        \ 2,\n    'number_of_chains': 4,\n    'max_number_of_iterations': 3000,\n\
        \    'burn_in': 0,\n\n    # Model\n    'model': {\n        'form': 'PK',\n\
        \        'id': 5\n    }\n    'dataset': 3,\n\n    # Model parameters\n   \
        \ 'parameters': [\n        {\n            'name': 'myokit.parameter1'\n  \
        \          'form': 'N',\n            'pooled': False,\n            'parameters':\
        \ [\n                '2 * biomarker[subject_weight]',\n                'parameter[parameter1_variance]'\n\
        \            ]\n        },\n        {\n            'name': 'parameter1_variance'\n\
        \            'form': 'N',\n            'parameters': [0, 1]\n        },\n\
        \        {\n            'name': 'myokit.parameter2'\n            'form': 'U',\n\
        \            'parameters': [-1, 1]\n        },\n        {\n            'name':\
        \ 'myokit.parameter3'\n            'form': 'F',\n            'parameters':\
        \ [123.5]\n        },\n    ]\n\n    # output\n    'observations': [\n    \
        \    {\n            'model': 'myokit.plasma_concentration',\n            'biomarker':\
        \ 'concentration,\n            'noise_form': 'N',\n            'noise_param_form':\
        \ 'N',\n            'parameters': [0, 1]\n        },\n        {\n        \
        \    'model': 'myokit.bacteria_count',\n            'biomarker': 'bacteria,\n\
        \            'noise_form': 'LN',\n            'noise_param_form': 'F'\n  \
        \          'parameters': [123.3]\n        },\n    ]\n}\n\nUses model as the\
        \ base model. If it is a PK or PKPD model, creates a model\nfor each protocol\
        \ used in the dataset, replacing the protocol of the model\nwith each new\
        \ one.\n\nThis set of models has a set of parameters. If pooled is True or\
        \ not given,\nthen parameters of the same qname are assumed to be identical,\
        \ if pooled is\nFalse, then the value of this parameter is different across\
        \ each subject.\nAll Variable fields from the original model are copied over\
        \ to the new\nmodels. Priors and fixed values for each parameter in this set\
        \ are provided\nin 'parameters'. Distribution parameters for each prior can\
        \ be provided\nusing a python expression, or a number. If a python expression\
        \ is used, the\nkeywords Parameter[<param_name>] are used to refer to other\
        \ parameters in\nthe list. Additional parameters can be added to the list\
        \ (parameters not in\nthe model) to contruct hierarchical inference. You can\
        \ refer to biomarkers\nin the expression using the keyword Biomarker[<biomarker_name>].\n\
        \nThe 'observations' field maps model output variables with biomarkers in\
        \ the\ndataset"
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/inference/{id}/stop:
    post:
      operationId: createStopInference
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/pharmacodynamic/{id}/simulate:
    post:
      operationId: createSimulatePd
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/dataset/{id}/csv/:
    put:
      operationId: csvDataset
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dataset.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DatasetCsv'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetCsv'
          description: ''
      tags:
      - api
  /api/project/{id}/monolix/:
    put:
      operationId: monolixProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Monolix'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monolix'
          description: ''
      tags:
      - api
  /api/pharmacodynamic/{id}/mmt/:
    put:
      operationId: mmtPharmacodynamicModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pharmacodynamic model.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pharmacodynamic'
          description: ''
      tags:
      - api
  /api/pharmacodynamic/{id}/sbml/:
    put:
      operationId: sbmlPharmacodynamicModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pharmacodynamic model.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PharmacodynamicSbml'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PharmacodynamicSbml'
          description: ''
      tags:
      - api
  /api/pharmacodynamic/{id}/set_variables_from_inference/:
    put:
      operationId: setVariablesFromInferencePharmacodynamicModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pharmacodynamic model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pharmacodynamic'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pharmacodynamic'
          description: ''
      tags:
      - api
  /api/dosed_pharmacokinetic/{id}/set_variables_from_inference/:
    put:
      operationId: setVariablesFromInferenceDosedPharmacokineticModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this dosed pharmacokinetic
          model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DosedPharmacokinetic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DosedPharmacokinetic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DosedPharmacokinetic'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DosedPharmacokinetic'
          description: ''
      tags:
      - api
components:
  schemas:
    Dataset:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        biomarker_types:
          type: array
          items:
            type: string
          readOnly: true
        subjects:
          type: array
          items:
            type: string
          readOnly: true
        protocols:
          type: string
          readOnly: true
        name:
          type: string
          description: name of the dataset
          maxLength: 100
        datetime:
          type: string
          format: date-time
          nullable: true
          description: date/time the experiment was conducted. All time measurements
            are relative to this date/time, which is in YYYY-MM-DD HH:MM:SS format.
            For example, 2020-07-18 14:30:59
        description:
          type: string
          description: short description of the dataset
        project:
          type: integer
          nullable: true
          description: Project that "owns" this model
      required:
      - name
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        profile:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            user:
              type: integer
          required:
          - user
          readOnly: true
        project_set:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - username
    Subject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        id_in_dataset:
          type: integer
          description: unique id in the dataset
        shape:
          type: integer
          description: Shape index associated with this subject. For plotting purposes
            in the frontend
        display:
          type: boolean
          description: True if this subject will be displayed in the frontend, False
            otherwise
        metadata:
          type: string
          description: subject metadata
        dataset:
          type: integer
          description: dataset containing this subject
        protocol:
          type: integer
          nullable: true
          description: dosing protocol for this subject.
      required:
      - id_in_dataset
      - dataset
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_access:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              read_only:
                type: boolean
                description: True if user has read access only
              user:
                type: integer
              project:
                type: string
                readOnly: true
            required:
            - user
        name:
          type: string
          description: name of the project
          maxLength: 100
        description:
          type: string
          description: short description of the project
        users:
          type: array
          items:
            type: string
          readOnly: true
          description: users with access to this project
      required:
      - user_access
      - name
    ProjectAccess:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        read_only:
          type: boolean
          description: True if user has read access only
        user:
          type: integer
        project:
          type: string
          readOnly: true
      required:
      - user
    Dose:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_time:
          type: number
          description: starting time point of dose, see protocol for units
        amount:
          type: number
          description: amount of compound administered over the duration, see protocol
            for units. Rate of administration is assumed constant
        duration:
          type: number
          description: Duration of dose administration, see protocol for units. Duration
            must be greater than 0.
        read_only:
          type: boolean
          description: true if object has been stored
        datetime:
          type: string
          format: date-time
          nullable: true
          description: datetime the object was stored.
        protocol:
          type: integer
          description: protocol containing this dose
      required:
      - start_time
      - amount
      - protocol
    Unit:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        compatible_units:
          type: string
          readOnly: true
        symbol:
          type: string
          description: symbol for unit display
          maxLength: 50
        g:
          type: number
          description: grams exponent
        m:
          type: number
          description: meters exponent
        s:
          type: number
          description: seconds exponent
        A:
          type: number
          description: ampere exponent
        K:
          type: number
          description: kelvin exponent
        cd:
          type: number
          description: candela exponent
        mol:
          type: number
          description: mole exponent
        multiplier:
          type: number
          description: multiplier in powers of 10
      required:
      - symbol
    Variable:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        read_only:
          type: boolean
          description: true if object has been stored
        datetime:
          type: string
          format: date-time
          nullable: true
          description: datetime the object was stored.
        is_public:
          type: boolean
        lower_bound:
          type: number
          description: lowest possible value for this variable
        upper_bound:
          type: number
          description: largest possible value for this variable
        default_value:
          type: number
          description: default value for this variable
        is_log:
          type: boolean
          description: True if default_value is stored as the log of this value
        name:
          type: string
          description: name of the variable
          maxLength: 100
        binding:
          type: string
          nullable: true
          description: myokit binding of the variable (e.g. time)
          maxLength: 100
        qname:
          type: string
          description: fully qualitifed name of the variable
          maxLength: 200
        constant:
          type: boolean
          description: True for a constant variable of the model, i.e. a parameter.
            False if non-constant, i.e. an output of the model (default is True)
        state:
          type: boolean
          description: True if it is a state variable of the model and has an initial
            condition parameter (default is False)
        color:
          type: integer
          description: Color index associated with this variable. For display purposes
            in the frontend
        display:
          type: boolean
          description: True if this variable will be displayed in the frontend, False
            otherwise
        axis:
          type: boolean
          description: False/True if biomarker type displayed on LHS/RHS axis
        unit:
          type: integer
          nullable: true
          description: variable values are in this unit (note this might be different
            from the unit in the stored sbml)
        pd_model:
          type: integer
          nullable: true
          description: pharmacodynamic model
        pk_model:
          type: integer
          nullable: true
          description: pharmacokinetic model
        dosed_pk_model:
          type: integer
          nullable: true
          description: dosed pharmacokinetic model
      required:
      - name
      - qname
    Protocol:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        doses:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              start_time:
                type: number
                description: starting time point of dose, see protocol for units
              amount:
                type: number
                description: amount of compound administered over the duration, see
                  protocol for units. Rate of administration is assumed constant
              duration:
                type: number
                description: Duration of dose administration, see protocol for units.
                  Duration must be greater than 0.
              read_only:
                type: boolean
                description: true if object has been stored
              datetime:
                type: string
                format: date-time
                nullable: true
                description: datetime the object was stored.
              protocol:
                type: integer
                description: protocol containing this dose
            required:
            - start_time
            - amount
            - protocol
          readOnly: true
        dose_ids:
          type: array
          items:
            type: string
          writeOnly: true
        dosed_pk_models:
          type: array
          items:
            type: string
          readOnly: true
        dataset:
          type: string
          readOnly: true
        subjects:
          type: array
          items:
            type: string
          readOnly: true
        read_only:
          type: boolean
          description: true if object has been stored
        datetime:
          type: string
          format: date-time
          nullable: true
          description: datetime the object was stored.
        name:
          type: string
          description: name of the protocol
          maxLength: 100
        dose_type:
          enum:
          - D
          - I
          type: string
        project:
          type: integer
          nullable: true
          description: Project that "owns" this protocol.
        compound:
          type: integer
          nullable: true
          description: drug compound
        time_unit:
          type: integer
          nullable: true
          description: unit for the start_time and duration values stored in each
            dose
        amount_unit:
          type: integer
          nullable: true
          description: unit for the amount value stored in each dose
      required:
      - dose_ids
      - name
    BiomarkerType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        data:
          type: string
          readOnly: true
        is_continuous:
          type: string
          readOnly: true
        is_categorical:
          type: string
          readOnly: true
        name:
          type: string
          description: name of the biomarker type
          maxLength: 100
        description:
          type: string
          nullable: true
          description: short description of the biomarker type
        display:
          type: boolean
          description: True if this biomarker type will be displayed in the frontend,
            False otherwise
        color:
          type: integer
          description: Color index associated with this biomarker type. For plotting
            purposes in the frontend
        axis:
          type: boolean
          description: True/False if biomarker type displayed on LHS/RHS axis
        stored_unit:
          type: integer
          description: unit for the value stored in :model:`pkpdapp.Biomarker`
        dataset:
          type: integer
          description: dataset containing this biomarker measurement
        display_unit:
          type: integer
          description: unit to use when sending or displaying biomarker values
        stored_time_unit:
          type: integer
          description: unit for the time values stored in :model:`pkpdapp.Biomarker`
        display_time_unit:
          type: integer
          description: unit to use when sending or displaying time values
      required:
      - name
      - stored_unit
      - dataset
      - display_unit
      - stored_time_unit
      - display_time_unit
    Pharmacokinetic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        read_only:
          type: boolean
          description: true if object has been stored
        datetime:
          type: string
          format: date-time
          nullable: true
          description: datetime the object was stored.
        name:
          type: string
          description: name of the model
          maxLength: 100
        description:
          type: string
          description: short description of the model
        mmt:
          type: string
          description: the model represented using mmt (see https://myokit.readthedocs)
        time_max:
          type: number
          description: suggested maximum time to simulate for this model (in the time
            units specified by the mmt model)
      required:
      - name
    Pharmacodynamic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        components:
          type: string
          readOnly: true
        variables:
          type: array
          items:
            type: string
          readOnly: true
        mmt:
          type: string
        read_only:
          type: boolean
          description: true if object has been stored
        datetime:
          type: string
          format: date-time
          nullable: true
          description: datetime the object was stored.
        name:
          type: string
          description: name of the model
          maxLength: 100
        description:
          type: string
          description: short description of the model
        time_max:
          type: number
          description: suggested maximum time to simulate for this model (in the time
            units specified by the mmt model)
        project:
          type: integer
          nullable: true
          description: Project that "owns" this model
      required:
      - name
    DosedPharmacokinetic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        mappings:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              datetime:
                type: string
                format: date
                readOnly: true
              read_only:
                type: boolean
                readOnly: true
              pkpd_model:
                type: integer
                description: PKPD model that this mapping is for
              pk_variable:
                type: integer
                description: variable in PK part of model
              pd_variable:
                type: integer
                description: variable in PD part of model
            required:
            - pkpd_model
            - pk_variable
            - pd_variable
        components:
          type: string
          readOnly: true
        variables:
          type: array
          items:
            type: string
          readOnly: true
        mmt:
          type: string
          readOnly: true
        read_only:
          type: boolean
          description: true if object has been stored
        datetime:
          type: string
          format: date-time
          nullable: true
          description: datetime the object was stored.
        name:
          type: string
          description: name of the model
          maxLength: 100
        dose_compartment:
          type: string
          nullable: true
          description: compartment name to be dosed
          maxLength: 100
        time_max:
          type: number
          description: suggested time to simulate after the last dose (in the time
            units specified by the mmt model)
        project:
          type: integer
          nullable: true
          description: Project that "owns" this model
        pk_model:
          type: integer
          nullable: true
          description: model
        pd_model:
          type: integer
          nullable: true
          description: PD part of model
        protocol:
          type: integer
          nullable: true
          description: dosing protocol
      required:
      - mappings
      - name
    Inference:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        log_likelihoods:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              parameters:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    name:
                      type: string
                      description: name of log_likelihood parameter.
                      maxLength: 100
                    parent_index:
                      type: integer
                      nullable: true
                      description: parameter index for distribution and equation parameters.
                        blank for models (variable is used instead)
                    child_index:
                      type: integer
                      description: 'output index for all log_likelihoods. '
                    length:
                      type: integer
                      nullable: true
                      description: length of array representing parameter. null for
                        scalar
                    parent:
                      type: string
                      readOnly: true
                    child:
                      type: integer
                    variable:
                      type: integer
                      nullable: true
                      description: input model variable for this parameter.
                  required:
                  - name
                  - child
              model:
                type: string
                readOnly: true
              dataset:
                type: string
                readOnly: true
              time_variable:
                type: string
                readOnly: true
              is_a_prior:
                type: string
                readOnly: true
              name:
                type: string
                description: name of log_likelihood.
                maxLength: 100
              description:
                type: string
                nullable: true
                description: 'description of log_likelihood. For equations will be
                  the code of that equation using Python syntax: arg1 * arg2^arg3'
              value:
                type: number
                nullable: true
                description: set if a fixed value is required
              time_independent_data:
                type: boolean
                description: 'True if biomarker_type refers to time-independent data.
                  If there are multiple timepoints in biomarker_type then only the
                  first is taken '
              observed:
                type: boolean
                description: 'True if this log_likelihood is observed '
              form:
                enum:
                - N
                - U
                - LN
                - F
                - S
                - E
                - M
                type: string
              inference:
                type: string
                readOnly: true
                description: 'Log_likelihood belongs to this inference object. '
              variable:
                type: integer
                nullable: true
                description: 'If form=MODEL, a variable (any) in the deterministic
                  model. '
              biomarker_type:
                type: integer
                nullable: true
                description: data associated with this log_likelihood. This is used
                  for measurement data (observed=True) or for covariates (observed=False).
                  The random variable associated with this log_likelihood has the
                  same shape as this data. For covariates the subject ids in the data
                  correspond to the values of the random variable at that location.
              protocol_filter:
                type: integer
                nullable: true
                description: filter subject data on this protocol(null implies all
                  subjects)
              children:
                type: array
                items:
                  type: string
                readOnly: true
            required:
            - parameters
            - name
        read_only:
          type: boolean
          description: true if object has been stored
        datetime:
          type: string
          format: date-time
          nullable: true
          description: datetime the object was stored.
        name:
          type: string
          description: name of the dataset
          maxLength: 100
        description:
          type: string
          description: short description of what this inference does
        initialization_strategy:
          enum:
          - D
          - R
          - F
          type: string
        number_of_chains:
          type: integer
          description: number of chains
        max_number_of_iterations:
          type: integer
          description: maximum number of iterations
        burn_in:
          type: integer
          description: final iteration of burn-in
        number_of_iterations:
          type: integer
          description: number of iterations calculated
        time_elapsed:
          type: integer
          description: Elapsed run time for inference in seconds
        number_of_function_evals:
          type: integer
          description: number of function evaluations
        task_id:
          type: string
          nullable: true
          description: If executing, this is the celery task id
          maxLength: 40
        metadata:
          type: object
          description: metadata for inference
        project:
          type: integer
          description: Project that "owns" this inference object
        algorithm:
          type: integer
          description: algorithm used to perform the inference
        initialization_inference:
          type: integer
          nullable: true
      required:
      - log_likelihoods
      - name
      - project
    Algorithm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: name of the algorithm
          maxLength: 100
        category:
          enum:
          - SA
          - OP
          - OT
          type: string
      required:
      - name
      - category
    InferenceChain:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        data:
          type: string
          readOnly: true
        outputs:
          type: string
          readOnly: true
        inference:
          type: integer
          description: inference for this chain
      required:
      - inference
    DatasetCsv:
      type: object
      properties:
        csv:
          type: string
          format: binary
      required:
      - csv
    Monolix:
      type: object
      properties:
        data_csv:
          type: string
          format: binary
          writeOnly: true
        model_txt:
          type: string
          format: binary
          writeOnly: true
        project_mlxtran:
          type: string
          format: binary
          writeOnly: true
        data:
          type: string
          readOnly: true
        pd_model:
          type: string
          readOnly: true
        pk_model:
          type: string
          readOnly: true
      required:
      - data_csv
      - model_txt
      - project_mlxtran
    PharmacodynamicSbml:
      type: object
      properties:
        sbml:
          type: string
          writeOnly: true
      required:
      - sbml
